---
- name: Create PipelineRun listener resources
  tags:
    - gchat
    - metrics
  block:
    - name: Create Namespace
      kubernetes.core.k8s:
        state: present
        apply: true
        validate_certs: "{{ k8s_validate_certs }}"
        definition:
          kind: Namespace
          apiVersion: v1
          metadata:
            name: "{{ pipelinerun_listener_namespace }}"
            annotations:
              # TaskRuns are created without a corresponding PipelineRun.
              # Make sure the pruner cleans up both.
              operator.tekton.dev/prune.resources: "pipelinerun, taskrun"

    # Hint: Set logLevel to debug in the config-logging-triggers ConfigMap to view the events
    - name: Create EventListener
      kubernetes.core.k8s:
        state: present
        apply: true
        namespace: "{{ pipelinerun_listener_namespace }}"
        validate_certs: "{{ k8s_validate_certs }}"
        definition:
          apiVersion: triggers.tekton.dev/v1alpha1
          kind: EventListener
          metadata:
            name: pipelinerun-listener
          spec:
            triggers:
              - name: pipelinerun-listener-trigger
                interceptors:
                  - cel:
                      filter: >-
                        (
                          (
                            header.match("Ce-Type", "dev.tekton.event.pipelinerun.successful.v1")
                            || header.match("Ce-Type", "dev.tekton.event.pipelinerun.failed.v1")
                          )
                          &&
                          (
                            body.pipelineRun.metadata.namespace.startsWith("operator-pipeline-")
                            || body.pipelineRun.metadata.namespace == "index-signature-verification"
                          )
                        )
                bindings:
                  - ref: pipelinerun-trigger-binding
                template:
                  ref: pipelinerun-trigger-template
              - name: metrics-trigger
                interceptors:
                  - cel:
                      filter: >-
                        (
                          (
                            header.match("Ce-Type", "dev.tekton.event.pipelinerun.successful.v1")
                            || header.match("Ce-Type", "dev.tekton.event.pipelinerun.failed.v1")
                          )
                          &&
                          (
                            !body.pipelineRun.metadata.name.startsWith("metrics-pipeline-")
                          )
                        )
                bindings:
                  - ref: metrics-trigger-binding
                template:
                  ref: metrics-trigger-template

    - name: Set default Tekton CloudEvents sink
      kubernetes.core.k8s:
        state: present
        validate_certs: "{{ k8s_validate_certs }}"
        namespace: openshift-pipelines
        definition:
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: config-defaults
          data:
            default-cloud-events-sink: "http://el-pipelinerun-listener.{{ pipelinerun_listener_namespace }}.svc.cluster.local:8080"
